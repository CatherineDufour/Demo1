kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: dec-demo1
  annotations:
    description: Agents cloud ARIES pour les expérimentations du projet SQIN.
    tags: cqen, experimentation, sqin, aries, dec, directeur de l'état civil, émetteur
objects:
#DEC-wallet (PostgreSQL)
- kind: Secret
  apiVersion: v1
  metadata:
    name: dec-wallet
    annotations:
      template.openshift.io/expose-username: "{.data['database-user']}"
      template.openshift.io/expose-password: "{.data['database-password']}"
      template.openshift.io/expose-username: "{.data['database-admin-user']}"
      template.openshift.io/expose-password: "{.data['database-admin-password']}"
      template.openshift.io/expose-password: "{.data['database-name']}"
  stringData:
    database-user: "dbuser"
    database-password: "dbpassword"
    database-admin-user: "postgres"
    database-admin-password: "dbadminpassword"
    database-name: "wallets"
- kind: Service
  apiVersion: v1
  metadata:
    name: dec-wallet
  spec:
    ports:
    - name: dec-wallet
      protocol: TCP
      port: 5432
      targetPort: 5432
      nodePort: 0
    selector:
      name: dec-wallet
    type: ClusterIP
    sessionAffinity: None
  status:
    loadBalancer: {}
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: dec-wallet
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: dec-wallet
    annotations:
      template.alpha.openshift.io/wait-for-ready: 'true'
    labels:
      app: dec-wallet
      app.kubernetes.io/part-of: DEC
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - dec-wallet
        from:
          kind: ImageStreamTag
          name: postgresql:10
          namespace: openshift
        lastTriggeredImage: ''
    - type: ConfigChange
    replicas: 1
    selector:
      name: dec-wallet
    template:
      metadata:
        labels:
          name: dec-wallet
      spec:
        containers:
        - name: dec-wallet
          image: " "
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 5
            exec:
              command:
              - "/usr/libexec/check-container"
          livenessProbe:
            timeoutSeconds: 10
            initialDelaySeconds: 120
            exec:
              command:
              - "/usr/libexec/check-container"
              - "--live"
          env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                name: dec-wallet
                key: database-user
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: dec-wallet
                key: database-password
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                name: dec-wallet
                key: database-name
          - name: POSTGRESQL_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: dec-wallet
                key: database-admin-password                
          resources:
            limits:
              memory: 512Mi
          volumeMounts:
          - name: dec-wallet-data
            mountPath: "/var/lib/pgsql/data"
          terminationMessagePath: "/dev/termination-log"
          imagePullPolicy: IfNotPresent
          capabilities: {}
          securityContext:
            capabilities: {}
            privileged: false
        volumes:
        - name: dec-wallet-data
          persistentVolumeClaim:
            claimName: dec-wallet
        restartPolicy: Always
        dnsPolicy: ClusterFirst
  status: {}

#DEC-agent
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: dec-agent
- kind: BuildConfig
  apiVersion: v1
  metadata:
    labels:
      app: dec-agent
    name: dec-agent
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: 'dec-agent:latest'
    resources: {}
    successfulBuildsHistoryLimit: 5
    failedBuildsHistoryLimit: 5
    strategy:
      type: Docker
      dockerStrategy:
        noCache: true
        env:
          - name: POSTGRESQL_WALLET_USER
            valueFrom:
              secretKeyRef:
                name: dec-wallet
                key: database-user
          - name: POSTGRESQL_WALLET_PASSWORD
            valueFrom:
              secretKeyRef:
                name: dec-wallet
                key: database-password
          - name: POSTGRESQL_WALLET_ADMIN_USER
            valueFrom:
              secretKeyRef:
                name: dec-wallet
                key: database-admin-user
          - name: POSTGRESQL_WALLET_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: dec-wallet
                key: database-admin-password
        forcePull: true
        dockerfilePath: Dockerfile
        buildArgs:
        #Seed: 000000000000DirecteurEtatCivilQc
        #DID: Ep31SvFAetugFPe5CGzJxt
        #Verkey: 8XbHSBZu5LpTUmDuvmLtfxUNjKzk4Dpm7u6wX2DuPLMj
        - name: ISSUER_SEED
          value: 000000000000DirecteurEtatCivilQc
        - name: ISSUER_AGENT_ENDPOINT
          value: 'http://dec-agent.apps.exp.lab.pocquebec.org'
        - name: ISSUER_WALLET_KEY
          value: Issuer1Wallet
        - name: ISSUER_ADMIN_API_KEY
          value: secret
        - name: ISSUER_HOSTNAME
          value: 'http://dec-agent.apps.exp.lab.pocquebec.org'
        - name: GENESIS_URL
          value: 'http://vonx.pocquebec.org:9000/genesis'
        - name: INBOUND_PORT
          value: '8000'
        - name: API_PORT
          value: '3000'
        - name: ISSUER_POSTGRESQL_WALLET_HOST
          value: dec-wallet
        - name: ISSUER_POSTGRESQL_WALLET_PORT
          value: '5432'
    postCommit: {}
    source:
      contextDir: DEC-agent
      type: Git
      git:
        uri: 'https://github.com/CQEN-QDCE/Demo1.git'
    triggers:
      - type: ConfigChange
    runPolicy: Serial
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: dec-agent
    labels:
      app: dec-agent
      app.kubernetes.io/part-of: DEC
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources: {}
      activeDeadlineSeconds: 21600
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - dec-agent
          from:
            kind: ImageStreamTag
            name: 'dec-agent:latest'
    replicas: 1
    revisionHistoryLimit: 10
    test: false
    selector:
      app: dec-agent
    template:
      metadata:
        labels:
          app: dec-agent
      spec:
        containers:
          - name: dec-agent
            image: " "
            ports:
              - containerPort: 3000
                protocol: TCP
              - containerPort: 8000
                protocol: TCP
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            imagePullPolicy: Always
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler
- kind: Service
  apiVersion: v1
  metadata:
    name: dec-agent
  spec:
    selector:
      app: dec-agent
    ports:
      - name: '3000'
        protocol: TCP
        port: 3000
        targetPort: 3000
      - name: '8000'
        protocol: TCP
        port: 8000
        targetPort: 8000
- kind: Route
  apiVersion: v1
  metadata:
    name: dec-agent
  spec:
    host: dec-agent.apps.exp.lab.pocquebec.org
    to:
      kind: Service
      name: dec-agent
      weight: 100
    port:
      targetPort: 8000
    wildcardPolicy: None
  status:
    ingress:
      - host: dec-agent.apps.exp.lab.pocquebec.org
        routerName: default
        conditions:
          - type: Admitted
            status: 'True'
        wildcardPolicy: None
        routerCanonicalHostname: apps.exp.lab.pocquebec.org
- kind: Route
  apiVersion: v1
  metadata:
    name: dec-agent-admin
  spec:
    host: dec-agent-admin.apps.exp.lab.pocquebec.org
    to:
      kind: Service
      name: dec-agent
      weight: 100
    port:
      targetPort: 3000
    wildcardPolicy: None
  status:
    ingress:
      - host: dec-agent-admin.apps.exp.lab.pocquebec.org
        routerName: default
        conditions:
          - type: Admitted
            status: 'True'
        wildcardPolicy: None
        routerCanonicalHostname: apps.exp.lab.pocquebec.org

#DEC-controller
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: dec-controller
- kind: BuildConfig
  apiVersion: v1
  metadata:
    annotations:
      app.openshift.io/vcs-uri: https://github.com/CQEN-QDCE/Demo1.git
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      app: dec-controller
    name: dec-controller
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: dec-controller:latest
    source:
      contextDir: DEC-controller
      git:
        uri: https://github.com/CQEN-QDCE/Demo1.git
      type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: Dockerfile
      type: Docker
    triggers:
      - type: ConfigChange
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: dec-controller
    labels:
      app: dec-controller
      app.kubernetes.io/part-of: DEC
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources: {}
      activeDeadlineSeconds: 21600
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - dec-controller
          from:
            kind: ImageStreamTag
            name: "dec-controller:latest"
    replicas: 1
    revisionHistoryLimit: 10
    test: false
    selector:
      app: dec-controller
    template:
      metadata:
        labels:
          app: dec-controller
      spec:
        containers:
          - name: dec-controller
            image: " "
            ports:
              - containerPort: 10000
                protocol: TCP
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            imagePullPolicy: Always
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler
- kind: Service
  apiVersion: v1
  metadata:
    name: dec-controller
  spec:
    selector:
      app: dec-controller
    ports:
      - name: "10000"
        protocol: TCP
        port: 10000
        targetPort: 10000
- kind: Route
  apiVersion: v1
  metadata:
    name: dec-controller
  spec:
    host: dec-controller.apps.exp.lab.pocquebec.org
    to:
      kind: Service
      name: dec-controller
      weight: 100
    port:
      targetPort: 10000
    wildcardPolicy: None
  status:
    ingress:
      - host: dec-controller.apps.exp.lab.pocquebec.org
        routerName: default
        conditions:
          - type: Admitted
            status: "True"
        wildcardPolicy: None
        routerCanonicalHostname: apps.exp.lab.pocquebec.org
